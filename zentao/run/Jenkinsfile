pipeline {
    agent { node { label "build-server" } }
    stages {
        stage("init") {
            steps{
                script{
                    model_test = load "utils.groovy"
                }
            }
        }
        stage("read yaml file") {
            steps{
                script{
                    yaml_file = "conf.yml"
                    conf = model_test.read_yaml_file(yaml_file)
                }
            }
        }
        stage("start builder container to compile and package") {
            steps {
                echo "start to compile"

                sh "docker pull ${conf.BUILDER_IMAGE_NAME}"
                sh "docker rm -f zentao-builder"
                sh "docker run -d --name zentao-builder ${conf.BUILDER_IMAGE_NAME}"
            }
        }
	    stage("build image") {
		    steps {
		    	dir ("zentao/run") {
			        script {
			            echo "load config"
			            sh "wget http://${conf.ARTIFACTORY_OSS_SERVER}/${conf.DOWNLOAD_PATH}/config/config.zip"
			            sh "unzip -o config.zip -d config"

			            echo "build docker image ..."
			            sh "docker build \
			                --build-arg MYSQL_ROOT_PASSWORD=${conf.MYSQL_ROOT_PASSWORD} \
			                --rm -t ${conf.SERVER_IMAGE_NAME} ."
			        }
		        }
		    }
	    }
	    stage("push image") {
            steps {
                echo "upload docker image ..."

                sh "docker login -u ${conf.ARTIFACTORY_USER} -p ${conf.ARTIFACTORY_PASSWORD} ${conf.ARTIFACTORY_JCR_SERVER}"
                sh "docker push ${conf.SERVER_IMAGE_NAME}"
            }
        }
	    stage("start container") {
			steps {
                echo "start container"

                sh "docker pull ${conf.SERVER_IMAGE_NAME}"
                sh "docker rm -f zentao-server"
                sh "docker run -d --name zentao-server \
                        -p 50001:80 \
                        ${conf.SERVER_IMAGE_NAME}"
			}
	    }
	}
}
