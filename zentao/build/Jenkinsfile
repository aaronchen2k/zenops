import hudson.model.*;

println env.JENKINS_HOME
println env.JOB_NAME
println env.BUILD_NUMBER

pipeline {
    agent { node { label "build-server" } }
    stages {
        stage("init") {
            steps{
                script{
                    model_test = load "utils.groovy"
                }
            }
        }
        stage("read yaml file") {
            steps{
                script{
                    yaml_file = "conf.yml"
                    conf = model_test.read_yaml_file(yaml_file)
                }
            }
        }

 	    stage("build image") {
 		    steps {
 		    	dir ("zentao/build") {
 			        script {
 			            println "wget -P tool http://${conf.ARTIFACTORY_OSS_SERVER}/${conf.TOOLS_DOWNLOAD_PATH}/yuicompressor.jar"
			            echo "download tools"
			            sh "wget -P tool http://${conf.ARTIFACTORY_OSS_SERVER}/${conf.TOOLS_DOWNLOAD_PATH}/yuicompressor.jar"

			            echo "build docker image ..."
			            sh "docker build \
			                --build-arg ARTIFACTORY_OSS_SERVER=${conf.ARTIFACTORY_OSS_SERVER} \
			                --build-arg ARTIFACTORY_USER=${conf.ARTIFACTORY_USER} \
			                --build-arg ARTIFACTORY_PASSWORD=${conf.ARTIFACTORY_PASSWORD} \
			                --build-arg GIT_SERVER=${conf.GIT_SERVER} \
			                --build-arg GIT_USER=${conf.GIT_USER} \
			                --build-arg GIT_TOKEN=${conf.GIT_TOKEN} \
			                --rm -t ${conf.BUILDER_IMAGE_NAME} ."
 			        }
 		        }
 		    }
 	    }
	    stage("push image") {
			steps {
                echo "upload docker image ..."

                sh "docker login -u ${conf.ARTIFACTORY_USER} -p ${conf.ARTIFACTORY_PASSWORD} ${conf.ARTIFACTORY_JCR_SERVER}"
                sh "docker push ${conf.BUILDER_IMAGE_NAME}"
			}
 	    }
	}
}
